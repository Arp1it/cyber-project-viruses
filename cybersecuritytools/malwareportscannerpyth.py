import socket
import threading
import queue
from IPy import IP


IPs = input("enter ip here: ")

def check_ip(ip):
    try:
        IP(ip)
        return(ip)
    
    except ValueError:
        return socket.gethostbyname(ip)
    
# print(check_ip(IPs))
# exit()
    
q = queue.Queue()

PORT = input("enter port from - to: ")

pPORT = PORT.split("-")
portfrom, portto = int(pPORT[0]), int(pPORT[1])

openports = []

number_of_threads = int(input("enter threads to increase speed of port scanning: ") or 30)


# Storing port numbers in queue
for i in range(portfrom, portto+1):
    q.put(i)


def scan():
    while not q.empty():
        port = q.get()
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            try:
                s.connect((check_ip(IPs), port))
                openports.append(port)
                print(f'port {port} is open!')

            except:
                print(f'port {port} is close!')

        q.task_done()


# Create number of threads we want to use
try:
    for i in range(number_of_threads):
        t = threading.Thread(target=scan, daemon=True)
        t.start()
except:
    print(openports)
    exit()

q.join()

print(f"\nScan completed of {IPs}")

if openports:
    for port in openports:
        print(f"Port {port} are open!")

else:
    print(f"No open ports are detected in {portfrom}-{portto} range.")

print("finished.")